FROM ubuntu:20.04
# AS preinstall

ARG DEBIAN_FRONTEND=noninteractive
ENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=DontWarn

# Update Ubuntu Software repository
RUN apt update && \
    apt-get install -y \
      git micro autoconf automake libtool make libreadline-dev texinfo \
      pkg-config libpam0g-dev libjson-c-dev bison flex python3-pip \
      libc-ares-dev python3-dev python3-sphinx \
      install-info build-essential libsnmp-dev perl telnet openssh-server \
      libcap-dev python2 libelf-dev \
      sudo gdb curl iputils-ping time \
      lua5.3 liblua5.3-dev \      
      openvswitch-switch ssh \
      net-tools iproute2 \
      linux-generic && \
      curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output /tmp/get-pip.py && \
      python2 /tmp/get-pip.py && \
      rm -f  /tmp/get-pip.py && \
      python3 -m pip install wheel && \
      python3 -m pip install pytest && \
      python3 -m pip install pytest-xdist && \
      python3 -m pip install "scapy>=2.4.2" && \
      python3 -m pip install xmltodict && \
      python2 -m pip install 'exabgp<4.0.0'

RUN groupadd -r -g 92 frr && \
      groupadd -r -g 85 frrvty && \
      adduser --system --ingroup frr --home /home/frr \
              --gecos "FRR suite" --shell /bin/bash frr && \
      usermod -a -G frrvty frr && \
      useradd -d /var/run/exabgp/ -s /bin/false exabgp && \
      echo 'frr ALL = NOPASSWD: ALL' | tee /etc/sudoers.d/frr && \
      mkdir -p /home/frr && chown frr.frr /home/frr


#for libyang 2

# FROM preinstall AS libyang
RUN apt-get install -y cmake libpcre2-dev

USER frr

# build and install libyang2
RUN cd && pwd && ls -al && \
    git clone https://github.com/CESNET/libyang.git && \
    cd libyang && \
    git checkout v2.0.0 && \
    mkdir build; cd build && \
    cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr \
          -DCMAKE_BUILD_TYPE:String="Release" .. && \
    make -j $(nproc) && \
    sudo make install

COPY --chown=frr . /home/frr/frr/
COPY docker/ubuntu20-ci/docker-start /usr/sbin/docker-start
COPY docker/ubuntu20-ci/configure /usr/sbin/configure

RUN cd && ls -al && ls -al frr

# build and install quic
# here cloudflare/quiche implementation is used
# TODO build in release mode --release

# FROM libyang AS quic_install
# RUN cd && pwd && ls -al && \
#    curl https://sh.rustup.rs -sSf | sh -s -- -y && \
#    export PATH="$HOME/.cargo/bin:$PATH" && \
#    cargo version && \
#    git clone --recursive https://github.com/cloudflare/quiche && \
#    cd quiche && \
#    cargo build && \
#    cd ~ && cd quiche/target/debug && pwd && ls -al && \
#    sudo install $(ls -1 *.so *.a) /home/frr/frr/bgpd/quic/lib

# FROM quic_install AS frr
RUN cd ~/frr && \
    ./bootstrap.sh && \
    ./configure \
       --prefix=/usr \
       --localstatedir=/var/run/frr \
       --sbindir=/usr/lib/frr \
       --sysconfdir=/etc/frr \
       --enable-vtysh \
       --enable-pimd \
       --enable-sharpd \
       --enable-multipath=64 \
       --enable-user=frr \
       --enable-group=frr \
       --enable-vty-group=frrvty \
       --enable-snmp=agentx \
       --enable-scripting \
       --with-pkg-extra-version=-my-manual-build && \
    make -j $(nproc) && \
    sudo make install

RUN cd ~/frr && make check || true

# FROM frr AS conf
RUN 	cd ~/frr && \
	sudo install -m 775 -o frr -g frr -d /var/log/frr && \
	sudo install -m 775 -o frr -g frrvty -d /etc/frr && \
	sudo install -m 640 -o frr -g frrvty tools/etc/frr/vtysh.conf /etc/frr/vtysh.conf && \
	sudo install -m 640 -o frr -g frr tools/etc/frr/frr.conf /etc/frr/frr.conf && \
	sudo install -m 640 -o frr -g frr tools/etc/frr/daemons.conf /etc/frr/daemons.conf && \
	sudo install -m 640 -o frr -g frr tools/etc/frr/daemons /etc/frr/daemons
	

# MPLS Setup
RUN	cd ~/frr && \
	sudo install -m 640 -o frr -g frr tools/etc/modules-load.d/modules.conf /etc/modules-load.d/modules.conf && \
    # operation not permitted (need secure boot disabled).
    # not a problem bc module seems to be live by default
    # sudo modprobe -S $(ls /lib/modules) mpls-router mpls-iptunnel && \
	sudo install -m 640 -o frr -g frr tools/etc/sysctl.conf /etc/sysctl.conf

RUN 	cd ~/frr && \
	sudo install -m 644 tools/frr.service /etc/systemd/system/frr.service
	
CMD ["/usr/sbin/docker-start"]
